// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: like/service/api/api.proto

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Business int32

const (
	// The first value represents the default and must be == 0.
	Business_BUSINESS_UNKNOW Business = 0
	Business_BUSINESS_DM     Business = 1
	Business_BUSINESS_REPLY  Business = 2
	Business_BUSINESS_UGC    Business = 3
	Business_BUSINESS_OGV    Business = 4
)

var Business_name = map[int32]string{
	0: "BUSINESS_UNKNOW",
	1: "BUSINESS_DM",
	2: "BUSINESS_REPLY",
	3: "BUSINESS_UGC",
	4: "BUSINESS_OGV",
}

var Business_value = map[string]int32{
	"BUSINESS_UNKNOW": 0,
	"BUSINESS_DM":     1,
	"BUSINESS_REPLY":  2,
	"BUSINESS_UGC":    3,
	"BUSINESS_OGV":    4,
}

func (x Business) String() string {
	return proto.EnumName(Business_name, int32(x))
}

func (Business) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c149ae9475e95f1, []int{0}
}

type Action int32

const (
	// The first value represents the default and must be == 0.
	Action_ACTION_UNKNOW         Action = 0
	Action_ACTION_LIKE           Action = 1
	Action_ACTION_CANCEL_LIKE    Action = 2
	Action_ACTION_DISLIKE        Action = 3
	Action_ACTION_CANCEL_DISLIKE Action = 4
)

var Action_name = map[int32]string{
	0: "ACTION_UNKNOW",
	1: "ACTION_LIKE",
	2: "ACTION_CANCEL_LIKE",
	3: "ACTION_DISLIKE",
	4: "ACTION_CANCEL_DISLIKE",
}

var Action_value = map[string]int32{
	"ACTION_UNKNOW":         0,
	"ACTION_LIKE":           1,
	"ACTION_CANCEL_LIKE":    2,
	"ACTION_DISLIKE":        3,
	"ACTION_CANCEL_DISLIKE": 4,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c149ae9475e95f1, []int{1}
}

type LikeResp struct {
	// 来源id
	OriginId int64 `protobuf:"varint,1,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	// 对象id
	MessageId int64 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// 点赞数
	LikeNumber int64 `protobuf:"varint,3,opt,name=like_number,json=likeNumber,proto3" json:"like_number,omitempty"`
	// 点踩数
	DislikeNumber        int64    `protobuf:"varint,4,opt,name=dislike_number,json=dislikeNumber,proto3" json:"dislike_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeResp) Reset()         { *m = LikeResp{} }
func (m *LikeResp) String() string { return proto.CompactTextString(m) }
func (*LikeResp) ProtoMessage()    {}
func (*LikeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c149ae9475e95f1, []int{0}
}
func (m *LikeResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeResp.Merge(m, src)
}
func (m *LikeResp) XXX_Size() int {
	return m.Size()
}
func (m *LikeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeResp.DiscardUnknown(m)
}

var xxx_messageInfo_LikeResp proto.InternalMessageInfo

func (m *LikeResp) GetOriginId() int64 {
	if m != nil {
		return m.OriginId
	}
	return 0
}

func (m *LikeResp) GetMessageId() int64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *LikeResp) GetLikeNumber() int64 {
	if m != nil {
		return m.LikeNumber
	}
	return 0
}

func (m *LikeResp) GetDislikeNumber() int64 {
	if m != nil {
		return m.DislikeNumber
	}
	return 0
}

type LikeReq struct {
	// 业务
	BusinessId Business `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3,enum=learn_Go.like.service.v1.Business" json:"business_id,omitempty" validate:"required"`
	// mid
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty" validate:"gt=0,required"`
	// up 主mid
	UpMid int64 `protobuf:"varint,3,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	// 来源id
	OriginId int64 `protobuf:"varint,4,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	// 对象id
	MessageId int64  `protobuf:"varint,5,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty" validate:"gt=0,required"`
	Action    Action `protobuf:"varint,6,opt,name=action,proto3,enum=learn_Go.like.service.v1.Action" json:"action,omitempty" validate:"required"`
	// ip
	Ip         string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip"`
	LanguageId int64  `protobuf:"varint,8,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty" validate:"gt=0,required"`
	RegionId   int64  `protobuf:"varint,9,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty" validate:"gt=0,required"`
	// with_stat 是否返回计数信息
	WithStat             bool     `protobuf:"varint,10,opt,name=with_stat,json=withStat,proto3" json:"with_stat"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeReq) Reset()         { *m = LikeReq{} }
func (m *LikeReq) String() string { return proto.CompactTextString(m) }
func (*LikeReq) ProtoMessage()    {}
func (*LikeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c149ae9475e95f1, []int{1}
}
func (m *LikeReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeReq.Merge(m, src)
}
func (m *LikeReq) XXX_Size() int {
	return m.Size()
}
func (m *LikeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeReq.DiscardUnknown(m)
}

var xxx_messageInfo_LikeReq proto.InternalMessageInfo

func (m *LikeReq) GetBusinessId() Business {
	if m != nil {
		return m.BusinessId
	}
	return Business_BUSINESS_UNKNOW
}

func (m *LikeReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *LikeReq) GetUpMid() int64 {
	if m != nil {
		return m.UpMid
	}
	return 0
}

func (m *LikeReq) GetOriginId() int64 {
	if m != nil {
		return m.OriginId
	}
	return 0
}

func (m *LikeReq) GetMessageId() int64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *LikeReq) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_ACTION_UNKNOW
}

func (m *LikeReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *LikeReq) GetLanguageId() int64 {
	if m != nil {
		return m.LanguageId
	}
	return 0
}

func (m *LikeReq) GetRegionId() int64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func (m *LikeReq) GetWithStat() bool {
	if m != nil {
		return m.WithStat
	}
	return false
}

func init() {
	proto.RegisterEnum("learn_Go.like.service.v1.Business", Business_name, Business_value)
	proto.RegisterEnum("learn_Go.like.service.v1.Action", Action_name, Action_value)
	proto.RegisterType((*LikeResp)(nil), "learn_Go.like.service.v1.LikeResp")
	proto.RegisterType((*LikeReq)(nil), "learn_Go.like.service.v1.LikeReq")
}

func init() { proto.RegisterFile("like/service/api/api.proto", fileDescriptor_1c149ae9475e95f1) }

var fileDescriptor_1c149ae9475e95f1 = []byte{
	// 605 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xcd, 0x6e, 0xd3, 0x4e,
	0x14, 0xc5, 0xeb, 0x8f, 0xba, 0xf6, 0xcd, 0xbf, 0xad, 0xff, 0x53, 0xb5, 0x98, 0x14, 0x92, 0x60,
	0x09, 0xa9, 0xaa, 0xc0, 0x81, 0xb2, 0x02, 0xd4, 0x45, 0x9d, 0x46, 0x95, 0xd5, 0xd4, 0x05, 0x87,
	0x82, 0x40, 0x48, 0x96, 0x53, 0x0f, 0xce, 0xa8, 0x89, 0xed, 0xfa, 0x23, 0x88, 0x97, 0x60, 0x0d,
	0x6f, 0xc4, 0x92, 0x27, 0x88, 0x50, 0xd8, 0x75, 0xd9, 0x27, 0x40, 0x1e, 0xdb, 0x4d, 0x83, 0x14,
	0x91, 0x45, 0x14, 0xcf, 0xef, 0x9e, 0x33, 0x73, 0xef, 0x99, 0xc4, 0x50, 0x1d, 0x90, 0x0b, 0xdc,
	0x8c, 0x71, 0x34, 0x22, 0xe7, 0xb8, 0xe9, 0x84, 0x24, 0xfb, 0x68, 0x61, 0x14, 0x24, 0x01, 0x52,
	0x06, 0xd8, 0x89, 0x7c, 0xfb, 0x28, 0xd0, 0x32, 0x91, 0x56, 0x88, 0xb4, 0xd1, 0xd3, 0xea, 0x63,
	0x8f, 0x24, 0xfd, 0xb4, 0xa7, 0x9d, 0x07, 0xc3, 0xa6, 0x17, 0x78, 0x41, 0x93, 0x1a, 0x7a, 0xe9,
	0x27, 0xba, 0xa2, 0x0b, 0xfa, 0x94, 0x6f, 0x54, 0xdd, 0xf6, 0x82, 0xc0, 0x1b, 0xe0, 0xa9, 0x0a,
	0x0f, 0xc3, 0xe4, 0x4b, 0x5e, 0x54, 0xbf, 0x32, 0x20, 0x76, 0xc8, 0x05, 0xb6, 0x70, 0x1c, 0xa2,
	0x6d, 0x90, 0x82, 0x88, 0x78, 0xc4, 0xb7, 0x89, 0xab, 0x30, 0x0d, 0x66, 0x87, 0xb3, 0xc4, 0x1c,
	0x18, 0x2e, 0xba, 0x0f, 0x30, 0xc4, 0x71, 0xec, 0x78, 0x38, 0xab, 0xb2, 0xb4, 0x2a, 0x15, 0xc4,
	0x70, 0x51, 0x1d, 0x2a, 0x59, 0x9f, 0xb6, 0x9f, 0x0e, 0x7b, 0x38, 0x52, 0x38, 0x5a, 0x87, 0x0c,
	0x99, 0x94, 0xa0, 0x87, 0xb0, 0xe6, 0x92, 0xf8, 0xb6, 0x86, 0xa7, 0x9a, 0xd5, 0x82, 0xe6, 0x32,
	0xf5, 0x3b, 0x0f, 0x2b, 0x79, 0x43, 0x97, 0xe8, 0x23, 0x54, 0x7a, 0x69, 0x4c, 0x7c, 0x1c, 0xc7,
	0x65, 0x47, 0x6b, 0x7b, 0xaa, 0x36, 0x2f, 0x18, 0x4d, 0x2f, 0xc4, 0xfa, 0x9d, 0xeb, 0x71, 0x7d,
	0x63, 0xe4, 0x0c, 0x88, 0xeb, 0x24, 0xf8, 0x85, 0x1a, 0xe1, 0xcb, 0x94, 0x44, 0xd8, 0x55, 0x2d,
	0x28, 0xf7, 0x33, 0x5c, 0xa4, 0x01, 0x37, 0x2c, 0x27, 0xd1, 0xef, 0x5d, 0x8f, 0xeb, 0xca, 0xd4,
	0xe1, 0x25, 0xfb, 0x4f, 0x1e, 0x4d, 0x6d, 0x99, 0x10, 0x6d, 0x82, 0x90, 0x86, 0x76, 0x66, 0xc9,
	0x87, 0x5b, 0x4e, 0xc3, 0x13, 0xe2, 0xce, 0x86, 0xc6, 0xff, 0x15, 0xda, 0xcb, 0x99, 0xd0, 0x96,
	0x17, 0x38, 0xea, 0x56, 0xa4, 0xaf, 0x41, 0x70, 0xce, 0x13, 0x12, 0xf8, 0x8a, 0x40, 0x27, 0x6f,
	0xcc, 0x9f, 0xfc, 0x80, 0xea, 0xe6, 0xcf, 0x5d, 0x6c, 0x84, 0xb6, 0x80, 0x25, 0xa1, 0xb2, 0xd2,
	0x60, 0x76, 0x24, 0x5d, 0xb8, 0x1a, 0xd7, 0x59, 0x12, 0x5a, 0x2c, 0x09, 0xd1, 0x3e, 0x54, 0x06,
	0x8e, 0xef, 0xa5, 0x45, 0xa3, 0xe2, 0x02, 0x8d, 0x42, 0x69, 0x30, 0x5c, 0xf4, 0x1c, 0xa4, 0x08,
	0x7b, 0x24, 0xa0, 0x19, 0x48, 0x0b, 0x98, 0xc5, 0x5c, 0x6e, 0xb8, 0x68, 0x17, 0xa4, 0xcf, 0x24,
	0xe9, 0xdb, 0x71, 0xe2, 0x24, 0x0a, 0x34, 0x98, 0x1d, 0x51, 0x5f, 0xbd, 0x1a, 0xd7, 0xa7, 0xd0,
	0x12, 0xb3, 0xc7, 0x6e, 0xe2, 0x24, 0xbb, 0x7d, 0x10, 0xcb, 0x2b, 0x46, 0x1b, 0xb0, 0xae, 0x9f,
	0x75, 0x0d, 0xb3, 0xdd, 0xed, 0xda, 0x67, 0xe6, 0xb1, 0x79, 0xfa, 0x4e, 0x5e, 0x42, 0xeb, 0x50,
	0xb9, 0x81, 0x87, 0x27, 0x32, 0x83, 0x10, 0xac, 0xdd, 0x00, 0xab, 0xfd, 0xaa, 0xf3, 0x5e, 0x66,
	0x91, 0x0c, 0xff, 0x4d, 0x9d, 0x47, 0x2d, 0x99, 0x9b, 0x21, 0xa7, 0x47, 0x6f, 0x65, 0x7e, 0x37,
	0x06, 0x21, 0x8f, 0x14, 0xfd, 0x0f, 0xab, 0x07, 0xad, 0x37, 0xc6, 0xa9, 0x39, 0x73, 0x4a, 0x81,
	0x3a, 0xc6, 0x71, 0x5b, 0x66, 0xd0, 0x16, 0xa0, 0x02, 0xb4, 0x0e, 0xcc, 0x56, 0xbb, 0x93, 0x73,
	0x36, 0x3b, 0xbd, 0xe0, 0x87, 0x46, 0x97, 0x32, 0x0e, 0xdd, 0x85, 0xcd, 0x59, 0x6d, 0x59, 0xe2,
	0xf7, 0xce, 0x80, 0xcf, 0x7e, 0xf9, 0xe8, 0xa4, 0xf8, 0x7e, 0x30, 0xff, 0xbe, 0x8b, 0x7f, 0x48,
	0x55, 0xfd, 0x97, 0x24, 0x0e, 0xf5, 0xcd, 0x1f, 0x93, 0x1a, 0xf3, 0x73, 0x52, 0x63, 0x7e, 0x4d,
	0x6a, 0xcc, 0xb7, 0xdf, 0xb5, 0xa5, 0x0f, 0x9c, 0x13, 0x92, 0x9e, 0x40, 0x5f, 0x00, 0xcf, 0xfe,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x14, 0xa0, 0x79, 0x84, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LikeClient is the client API for Like service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LikeClient interface {
	//点赞
	Like(ctx context.Context, in *LikeReq, opts ...grpc.CallOption) (*LikeResp, error)
}

type likeClient struct {
	cc *grpc.ClientConn
}

func NewLikeClient(cc *grpc.ClientConn) LikeClient {
	return &likeClient{cc}
}

func (c *likeClient) Like(ctx context.Context, in *LikeReq, opts ...grpc.CallOption) (*LikeResp, error) {
	out := new(LikeResp)
	err := c.cc.Invoke(ctx, "/learn_Go.like.service.v1.Like/Like", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LikeServer is the server API for Like service.
type LikeServer interface {
	//点赞
	Like(context.Context, *LikeReq) (*LikeResp, error)
}

// UnimplementedLikeServer can be embedded to have forward compatible implementations.
type UnimplementedLikeServer struct {
}

func (*UnimplementedLikeServer) Like(ctx context.Context, req *LikeReq) (*LikeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Like not implemented")
}

func RegisterLikeServer(s *grpc.Server, srv LikeServer) {
	s.RegisterService(&_Like_serviceDesc, srv)
}

func _Like_Like_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LikeServer).Like(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/learn_Go.like.service.v1.Like/Like",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LikeServer).Like(ctx, req.(*LikeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Like_serviceDesc = grpc.ServiceDesc{
	ServiceName: "learn_Go.like.service.v1.Like",
	HandlerType: (*LikeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Like",
			Handler:    _Like_Like_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "like/service/api/api.proto",
}

func (m *LikeResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DislikeNumber != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DislikeNumber))
		i--
		dAtA[i] = 0x20
	}
	if m.LikeNumber != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LikeNumber))
		i--
		dAtA[i] = 0x18
	}
	if m.MessageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x10
	}
	if m.OriginId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.OriginId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LikeReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WithStat {
		i--
		if m.WithStat {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.RegionId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.RegionId))
		i--
		dAtA[i] = 0x48
	}
	if m.LanguageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.LanguageId))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Ip) > 0 {
		i -= len(m.Ip)
		copy(dAtA[i:], m.Ip)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Ip)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Action != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x30
	}
	if m.MessageId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x28
	}
	if m.OriginId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.OriginId))
		i--
		dAtA[i] = 0x20
	}
	if m.UpMid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.UpMid))
		i--
		dAtA[i] = 0x18
	}
	if m.Mid != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Mid))
		i--
		dAtA[i] = 0x10
	}
	if m.BusinessId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.BusinessId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LikeResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OriginId != 0 {
		n += 1 + sovApi(uint64(m.OriginId))
	}
	if m.MessageId != 0 {
		n += 1 + sovApi(uint64(m.MessageId))
	}
	if m.LikeNumber != 0 {
		n += 1 + sovApi(uint64(m.LikeNumber))
	}
	if m.DislikeNumber != 0 {
		n += 1 + sovApi(uint64(m.DislikeNumber))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BusinessId != 0 {
		n += 1 + sovApi(uint64(m.BusinessId))
	}
	if m.Mid != 0 {
		n += 1 + sovApi(uint64(m.Mid))
	}
	if m.UpMid != 0 {
		n += 1 + sovApi(uint64(m.UpMid))
	}
	if m.OriginId != 0 {
		n += 1 + sovApi(uint64(m.OriginId))
	}
	if m.MessageId != 0 {
		n += 1 + sovApi(uint64(m.MessageId))
	}
	if m.Action != 0 {
		n += 1 + sovApi(uint64(m.Action))
	}
	l = len(m.Ip)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.LanguageId != 0 {
		n += 1 + sovApi(uint64(m.LanguageId))
	}
	if m.RegionId != 0 {
		n += 1 + sovApi(uint64(m.RegionId))
	}
	if m.WithStat {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LikeResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginId", wireType)
			}
			m.OriginId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OriginId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeNumber", wireType)
			}
			m.LikeNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikeNumber |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DislikeNumber", wireType)
			}
			m.DislikeNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DislikeNumber |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessId", wireType)
			}
			m.BusinessId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BusinessId |= Business(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpMid", wireType)
			}
			m.UpMid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpMid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginId", wireType)
			}
			m.OriginId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OriginId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= Action(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ip = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LanguageId", wireType)
			}
			m.LanguageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LanguageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionId", wireType)
			}
			m.RegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RegionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithStat", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithStat = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
